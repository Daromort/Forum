// <auto-generated />
using System;
using Forum_Management_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Forum_Management_System.Migrations
{
    [DbContext(typeof(ForumDbContext))]
    [Migration("20230714102808_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Forum_Management_System.Models.Chat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Chats", (string)null);
                });

            modelBuilder.Entity("Forum_Management_System.Models.ChatUser", b =>
                {
                    b.Property<int>("ChatID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ChatID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("ChatUsers", (string)null);
                });

            modelBuilder.Entity("Forum_Management_System.Models.Comment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<int>("LikesCount")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(280)
                        .HasColumnType("nvarchar(280)");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParentID");

                    b.HasIndex("PostID");

                    b.HasIndex("UserID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(750),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "I don't like Hollywood at all, there are many homeless people there.",
                            PostID = 1,
                            UserID = 4
                        },
                        new
                        {
                            ID = 2,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(754),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "I fucking love Venice and Santa Monica. The sunsets there are fucking awesome.",
                            PostID = 1,
                            UserID = 3
                        },
                        new
                        {
                            ID = 3,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(756),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Downtown sucks, however I was enjoyed Venice as well.",
                            PostID = 1,
                            UserID = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(757),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "There is one in Springfield near the 7 eleven.",
                            PostID = 2,
                            UserID = 1
                        },
                        new
                        {
                            ID = 5,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(795),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Bro, try the one in Alexandria. Food there is always fresh and nice.",
                            PostID = 2,
                            UserID = 4
                        },
                        new
                        {
                            ID = 6,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(798),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "You  should visit the Off the record bar.",
                            PostID = 3,
                            UserID = 1
                        },
                        new
                        {
                            ID = 7,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(800),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Any bar in the downtown is pretty fine to me.",
                            PostID = 3,
                            UserID = 2
                        },
                        new
                        {
                            ID = 8,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(801),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Venice Beach is indeed beautiful. I love the vibrant atmosphere.",
                            PostID = 1,
                            UserID = 6
                        },
                        new
                        {
                            ID = 9,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(803),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Downtown has its charm, but I agree that Venice is more enjoyable.",
                            PostID = 1,
                            UserID = 7
                        },
                        new
                        {
                            ID = 10,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(806),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "I've heard great things about the fresh food market in Arlington.",
                            PostID = 2,
                            UserID = 8
                        },
                        new
                        {
                            ID = 11,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(808),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Alexandria also has a nice farmers' market. Check it out!",
                            PostID = 2,
                            UserID = 9
                        },
                        new
                        {
                            ID = 12,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(810),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "The Pub is my favorite bar in downtown DC. Great drinks and atmosphere.",
                            PostID = 3,
                            UserID = 10
                        },
                        new
                        {
                            ID = 13,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(813),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "I enjoy trying different bars in the area. There are so many options!",
                            PostID = 3,
                            UserID = 11
                        },
                        new
                        {
                            ID = 14,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(815),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Football is an amazing sport. I'm a huge fan of the NFL.",
                            PostID = 4,
                            UserID = 12
                        },
                        new
                        {
                            ID = 15,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(817),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "My favorite team is the New England Patriots. They always deliver.",
                            PostID = 4,
                            UserID = 13
                        },
                        new
                        {
                            ID = 16,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(819),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Europe is a dream destination for many travelers. Can't wait to explore it!",
                            PostID = 5,
                            UserID = 14
                        },
                        new
                        {
                            ID = 17,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(821),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "Don't forget to visit Paris and Rome. They have amazing landmarks.",
                            PostID = 5,
                            UserID = 1
                        },
                        new
                        {
                            ID = 18,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(823),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "The new Avengers movie is a must-watch. It's action-packed!",
                            PostID = 6,
                            UserID = 2
                        },
                        new
                        {
                            ID = 19,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(825),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "I'm more into indie films. Any recommendations for those?",
                            PostID = 6,
                            UserID = 3
                        },
                        new
                        {
                            ID = 20,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(827),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "The rooftop bar at W Hotel has stunning views of the city.",
                            PostID = 7,
                            UserID = 4
                        },
                        new
                        {
                            ID = 21,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(829),
                            IsBlocked = false,
                            LikesCount = 0,
                            Message = "I enjoy the lively atmosphere at the Adams Morgan bars.",
                            PostID = 7,
                            UserID = 5
                        });
                });

            modelBuilder.Entity("Forum_Management_System.Models.CommentDislike", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "CommentID");

                    b.HasIndex("CommentID");

                    b.ToTable("CommentsDislikes");
                });

            modelBuilder.Entity("Forum_Management_System.Models.CommentLike", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "CommentID");

                    b.HasIndex("CommentID");

                    b.ToTable("CommentsLikes");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Group", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("memberCount")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CreatorID");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(940),
                            CreatorID = 1,
                            Description = "A group for passionate travelers.",
                            Name = "Travel Enthusiasts",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(945),
                            CreatorID = 2,
                            Description = "For those who appreciate good food.",
                            Name = "Food Lovers",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 3,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(947),
                            CreatorID = 3,
                            Description = "Get fit and healthy together.",
                            Name = "Fitness Fanatics",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(949),
                            CreatorID = 6,
                            Description = "Discuss your favorite books and authors.",
                            Name = "Book Club",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 5,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(951),
                            CreatorID = 6,
                            Description = "Share your thoughts on the latest movies.",
                            Name = "Movie Buffs",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 6,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(954),
                            CreatorID = 6,
                            Description = "Explore the latest in technology.",
                            Name = "Tech Geeks",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 7,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(956),
                            CreatorID = 6,
                            Description = "For those who love sports and competition.",
                            Name = "Sports Fans",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 8,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(958),
                            CreatorID = 8,
                            Description = "Appreciate various forms of art and culture.",
                            Name = "Art and Culture",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 9,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(959),
                            CreatorID = 9,
                            Description = "Capture and share stunning photographs.",
                            Name = "Photography Enthusiasts",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 10,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(962),
                            CreatorID = 10,
                            Description = "Discover the beauty of the natural world.",
                            Name = "Nature Explorers",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 11,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(964),
                            CreatorID = 9,
                            Description = "Stay updated with the latest fashion trends.",
                            Name = "Fashion and Style",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 12,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(1003),
                            CreatorID = 12,
                            Description = "Discuss your favorite genres and artists.",
                            Name = "Music Lovers",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 13,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(1006),
                            CreatorID = 13,
                            Description = "Connect with fellow gamers.",
                            Name = "Gaming Community",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 14,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(1008),
                            CreatorID = 13,
                            Description = "Share recipes and cooking tips.",
                            Name = "Cooking Enthusiasts",
                            memberCount = 1
                        },
                        new
                        {
                            ID = 15,
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(1010),
                            CreatorID = 13,
                            Description = "Embark on thrilling outdoor activities.",
                            Name = "Outdoor Adventures",
                            memberCount = 1
                        });
                });

            modelBuilder.Entity("Forum_Management_System.Models.GroupUser", b =>
                {
                    b.Property<int>("GroupID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("GroupID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("GroupsUsers");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ChatID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Sent")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ChatID");

                    b.HasIndex("UserID");

                    b.ToTable("Messages", (string)null);
                });

            modelBuilder.Entity("Forum_Management_System.Models.Post", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GroupID")
                        .HasColumnType("int");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<int>("LikesCount")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserID");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Content = "Let's discuss the suburbs, downtown and Venice beach.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(435),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Hollywood is the best place to live.",
                            UserID = 1
                        },
                        new
                        {
                            ID = 2,
                            Content = "Where in VA I can find a fresh food market?",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(440),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Bio fresh food market on Sundays in Virginia?",
                            UserID = 2
                        },
                        new
                        {
                            ID = 3,
                            Content = "Guys, please share your experience and let me know which is your favorite place to go out.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(443),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Best bars in the downtown DC?",
                            UserID = 3
                        },
                        new
                        {
                            ID = 4,
                            Content = "Who are your favorite players teams and etc.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(444),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Football is my life.",
                            UserID = 4
                        },
                        new
                        {
                            ID = 5,
                            Content = "Share your best travel tips and recommendations for visiting Europe.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(446),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Traveling Tips for Europe",
                            UserID = 5
                        },
                        new
                        {
                            ID = 6,
                            Content = "Discuss the latest movies hitting the theaters and share your reviews.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(450),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "New Movie Releases",
                            UserID = 6
                        },
                        new
                        {
                            ID = 7,
                            Content = "Let's exchange our favorite recipes and cooking techniques.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(452),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Favorite Recipes",
                            UserID = 7
                        },
                        new
                        {
                            ID = 8,
                            Content = "Looking for some new books to read. Any recommendations?",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(461),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Book Recommendations",
                            UserID = 8
                        },
                        new
                        {
                            ID = 9,
                            Content = "Share your fitness journey, tips, and motivational stories.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(463),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Fitness Tips and Motivation",
                            UserID = 9
                        },
                        new
                        {
                            ID = 10,
                            Content = "Discuss the latest trends and advancements in the world of technology.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(467),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Technology Trends",
                            UserID = 10
                        },
                        new
                        {
                            ID = 11,
                            Content = "What are you currently listening to? Share your favorite music.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(468),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Music Recommendations",
                            UserID = 11
                        },
                        new
                        {
                            ID = 12,
                            Content = "Share your outdoor adventures and recommend the best hiking trails.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(470),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Outdoor Adventures",
                            UserID = 12
                        },
                        new
                        {
                            ID = 13,
                            Content = "Discuss home improvement projects and share your before/after pictures.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(472),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Home Improvement Ideas",
                            UserID = 13
                        },
                        new
                        {
                            ID = 14,
                            Content = "Join the discussion about the latest games and gaming news.",
                            CreatedAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(474),
                            IsBlocked = false,
                            LikesCount = 0,
                            Title = "Gaming Community",
                            UserID = 14
                        });
                });

            modelBuilder.Entity("Forum_Management_System.Models.PostDislike", b =>
                {
                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PostID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PostsDislikes");
                });

            modelBuilder.Entity("Forum_Management_System.Models.PostLike", b =>
                {
                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PostID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PostsLikes");
                });

            modelBuilder.Entity("Forum_Management_System.Models.PostTag", b =>
                {
                    b.Property<int>("PostID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.HasKey("PostID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("PostsTags");

                    b.HasData(
                        new
                        {
                            PostID = 1,
                            TagID = 1
                        },
                        new
                        {
                            PostID = 1,
                            TagID = 3
                        },
                        new
                        {
                            PostID = 1,
                            TagID = 9
                        },
                        new
                        {
                            PostID = 1,
                            TagID = 10
                        },
                        new
                        {
                            PostID = 2,
                            TagID = 2
                        },
                        new
                        {
                            PostID = 2,
                            TagID = 6
                        },
                        new
                        {
                            PostID = 2,
                            TagID = 7
                        },
                        new
                        {
                            PostID = 3,
                            TagID = 3
                        },
                        new
                        {
                            PostID = 3,
                            TagID = 8
                        },
                        new
                        {
                            PostID = 3,
                            TagID = 14
                        });
                });

            modelBuilder.Entity("Forum_Management_System.Models.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.HasKey("ID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "outdoor"
                        },
                        new
                        {
                            ID = 2,
                            Name = "fresh"
                        },
                        new
                        {
                            ID = 3,
                            Name = "downtown"
                        },
                        new
                        {
                            ID = 4,
                            Name = "football"
                        },
                        new
                        {
                            ID = 5,
                            Name = "favorite"
                        },
                        new
                        {
                            ID = 6,
                            Name = "food"
                        },
                        new
                        {
                            ID = 7,
                            Name = "market"
                        },
                        new
                        {
                            ID = 8,
                            Name = "bar"
                        },
                        new
                        {
                            ID = 9,
                            Name = "beach"
                        },
                        new
                        {
                            ID = 10,
                            Name = "suburbs"
                        },
                        new
                        {
                            ID = 11,
                            Name = "player"
                        },
                        new
                        {
                            ID = 12,
                            Name = "team"
                        },
                        new
                        {
                            ID = 13,
                            Name = "bio"
                        },
                        new
                        {
                            ID = 14,
                            Name = "around"
                        },
                        new
                        {
                            ID = 15,
                            Name = "drinks"
                        });
                });

            modelBuilder.Entity("Forum_Management_System.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FacebookProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("InstagramProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<int>("Karma")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("ID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "I am a user with a simple description.",
                            Email = "JohnDow@gmail.com",
                            FirstName = "John",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Dow",
                            Password = "JohnyDow@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(122),
                            Role = "User",
                            Username = "TheCrazyJohn"
                        },
                        new
                        {
                            ID = 2,
                            Description = "I am a user with a simple description.",
                            Email = "PeterPan@gmail.com",
                            FirstName = "Peter",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Pan",
                            Password = "PeterPan@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(129),
                            Role = "User",
                            Username = "TheCrazyPete"
                        },
                        new
                        {
                            ID = 3,
                            Description = "I am a user with a simple description.",
                            Email = "ScarletDavidson@gmail.com",
                            FirstName = "Scarlet",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Davidson",
                            Password = "ScarletDavidson@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(133),
                            Role = "User",
                            Username = "TheCrazyScarley"
                        },
                        new
                        {
                            ID = 4,
                            Description = "I am a user with a simple description.",
                            Email = "MelonyClark@gmail.com",
                            FirstName = "Melony",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Clark",
                            Password = "MelonyClark@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(191),
                            Role = "User",
                            Username = "TheCrazyClark"
                        },
                        new
                        {
                            ID = 5,
                            Description = "I am an admin with a simple description.",
                            Email = "ChrisRhea@gmail.com",
                            FirstName = "Chris",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Rhea",
                            Password = "ChrisRhea",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(194),
                            Role = "Admin",
                            Username = "TheCrazyChris"
                        },
                        new
                        {
                            ID = 6,
                            Description = "I am a user with a simple description.",
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Smith",
                            Password = "AliceSmith@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(201),
                            Role = "User",
                            Username = "alice123"
                        },
                        new
                        {
                            ID = 7,
                            Description = "I am a user with a simple description.",
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Johnson",
                            Password = "BobJohnson@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(205),
                            Role = "User",
                            Username = "bob123"
                        },
                        new
                        {
                            ID = 8,
                            Description = "I am a user with a simple description.",
                            Email = "emma.davis@example.com",
                            FirstName = "Emma",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Davis",
                            Password = "EmmaDavis@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(208),
                            Role = "User",
                            Username = "emma123"
                        },
                        new
                        {
                            ID = 9,
                            Description = "I am a user with a simple description.",
                            Email = "michael.wilson@example.com",
                            FirstName = "Michael",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Wilson",
                            Password = "MichaelWilson@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(211),
                            Role = "User",
                            Username = "michael123"
                        },
                        new
                        {
                            ID = 10,
                            Description = "I am a user with a simple description.",
                            Email = "sophia.thomas31231312@example.com",
                            FirstName = "Sophia",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Thomas",
                            Password = "SophiaThomas@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(217),
                            Role = "User",
                            Username = "sophia123"
                        },
                        new
                        {
                            ID = 11,
                            Description = "I am a user with a simple description.",
                            Email = "jacob.brown@example.com",
                            FirstName = "Jacob",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Brown",
                            Password = "JacobBrown@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(220),
                            Role = "User",
                            Username = "jacob123"
                        },
                        new
                        {
                            ID = 12,
                            Description = "I am a user with a simple description.",
                            Email = "olivia.taylor@example.com",
                            FirstName = "Olivia",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Taylor",
                            Password = "OliviaTaylor@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(224),
                            Role = "User",
                            Username = "olivia123"
                        },
                        new
                        {
                            ID = 13,
                            Description = "I am a user with a simple description.",
                            Email = "ethan.anderson@example.com",
                            FirstName = "Ethan",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Anderson",
                            Password = "EthanAnderson@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(227),
                            Role = "User",
                            Username = "ethan123"
                        },
                        new
                        {
                            ID = 14,
                            Description = "I am a user with a simple description.",
                            Email = "oliver.wilson@example.com",
                            FirstName = "Oliver",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Wilson",
                            Password = "OliverWilson@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(268),
                            Role = "User",
                            Username = "oliver123"
                        },
                        new
                        {
                            ID = 15,
                            Description = "I am a user with a simple description.",
                            Email = "amelia.brown@example.com",
                            FirstName = "Amelia",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Brown",
                            Password = "AmeliaBrown@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(272),
                            Role = "User",
                            Username = "amelia123"
                        },
                        new
                        {
                            ID = 16,
                            Description = "I am a user with a simple description.",
                            Email = "liam.taylor@example.com",
                            FirstName = "Liam",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Taylor",
                            Password = "LiamTaylor@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(275),
                            Role = "User",
                            Username = "liam123"
                        },
                        new
                        {
                            ID = 17,
                            Description = "I am a user with a simple description.",
                            Email = "sophia.thomas@example.com",
                            FirstName = "Sophia",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Thomas",
                            Password = "SophiaThomas@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(279),
                            Role = "User",
                            Username = "sophia123"
                        },
                        new
                        {
                            ID = 18,
                            Description = "I am a user with a simple description.",
                            Email = "noah.clark@example.com",
                            FirstName = "Noah",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Clark",
                            Password = "NoahClark@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(283),
                            Role = "User",
                            Username = "noah123"
                        },
                        new
                        {
                            ID = 19,
                            Description = "I am a user with a simple description.",
                            Email = "ava.anderson@example.com",
                            FirstName = "Ava",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Anderson",
                            Password = "AvaAnderson@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(286),
                            Role = "User",
                            Username = "ava123"
                        },
                        new
                        {
                            ID = 20,
                            Description = "I am a user with a simple description.",
                            Email = "mason.miller@example.com",
                            FirstName = "Mason",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Miller",
                            Password = "MasonMiller@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(289),
                            Role = "User",
                            Username = "mason123"
                        },
                        new
                        {
                            ID = 21,
                            Description = "I am a user with a simple description.",
                            Email = "isabella.martin@example.com",
                            FirstName = "Isabella",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Martin",
                            Password = "IsabellaMartin@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(292),
                            Role = "User",
                            Username = "isabella123"
                        },
                        new
                        {
                            ID = 22,
                            Description = "I am a user with a simple description.",
                            Email = "james.walker@example.com",
                            FirstName = "James",
                            IsBlocked = false,
                            Karma = 0,
                            LastName = "Walker",
                            Password = "JamesWalker@",
                            RegisteredAt = new DateTime(2023, 7, 14, 10, 28, 8, 343, DateTimeKind.Utc).AddTicks(295),
                            Role = "User",
                            Username = "james123"
                        });
                });

            modelBuilder.Entity("Forum_Management_System.Models.ChatUser", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Chat", "Chat")
                        .WithMany("ChatsUsers")
                        .HasForeignKey("ChatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("ChatsUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Comment", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Comment", "Parent")
                        .WithMany("Replies")
                        .HasForeignKey("ParentID");

                    b.HasOne("Forum_Management_System.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Parent");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.CommentDislike", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Comment", "Comment")
                        .WithMany("Dislikes")
                        .HasForeignKey("CommentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("CommentDislikes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.CommentLike", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Comment", "Comment")
                        .WithMany("Likes")
                        .HasForeignKey("CommentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("CommentLikes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Group", b =>
                {
                    b.HasOne("Forum_Management_System.Models.User", "Creator")
                        .WithMany("CreatedGroups")
                        .HasForeignKey("CreatorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Forum_Management_System.Models.GroupUser", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Group", "Group")
                        .WithMany("GroupsUsers")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("GroupUsers")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Message", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Post", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Group", "Group")
                        .WithMany("Posts")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.PostDislike", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Post", "Post")
                        .WithMany("Dislikes")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("PostDislikes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.PostLike", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.User", "User")
                        .WithMany("PostLikes")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum_Management_System.Models.PostTag", b =>
                {
                    b.HasOne("Forum_Management_System.Models.Post", "Post")
                        .WithMany("PostTag")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum_Management_System.Models.Tag", "Tag")
                        .WithMany("PostTag")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Chat", b =>
                {
                    b.Navigation("ChatsUsers");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Comment", b =>
                {
                    b.Navigation("Dislikes");

                    b.Navigation("Likes");

                    b.Navigation("Replies");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Group", b =>
                {
                    b.Navigation("GroupsUsers");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Dislikes");

                    b.Navigation("Likes");

                    b.Navigation("PostTag");
                });

            modelBuilder.Entity("Forum_Management_System.Models.Tag", b =>
                {
                    b.Navigation("PostTag");
                });

            modelBuilder.Entity("Forum_Management_System.Models.User", b =>
                {
                    b.Navigation("ChatsUsers");

                    b.Navigation("CommentDislikes");

                    b.Navigation("CommentLikes");

                    b.Navigation("Comments");

                    b.Navigation("CreatedGroups");

                    b.Navigation("GroupUsers");

                    b.Navigation("PostDislikes");

                    b.Navigation("PostLikes");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
